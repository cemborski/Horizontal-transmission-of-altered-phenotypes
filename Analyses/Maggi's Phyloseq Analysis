  
---
title: "Phyloseq"
author: "Maggi Mars & Sasha Mikheyev"
date: "4/17/2018"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
```

```{r loadLibraries}
library(phyloseq)
library(tidyverse)
library(RColorBrewer)
library(DESeq2)
```

```{r readData}
P <- brewer.pal(12, "Paired")
S2 <- brewer.pal(8, "Set2")
S1 <- brewer.pal(8, "Set1")
D2 <- brewer.pal(8, "Dark2")
colors<- c(P, S2, S1,D2)
#import taxonomy (saved as tsv from taxonomy.qzv)
taxonomy<- read.delim("https://raw.githubusercontent.com/cemborski/Horizontal-transmission-of-altered-phenotypes/master/16s%20rRNA%20HiSeq%20Analysis/Taxonomy.tsv")
names(taxonomy) <- c("row", "tax", "Confidence")
row.names(taxonomy) <-taxonomy[[1]]
taxonomy <- taxonomy[,(-1)]
taxonomy <-  separate(taxonomy, tax, c("D0","D1", "D2", "D3", "D4", "D5", "D6", "D7", "D8", "D9", "D10", "D11", "D12", "D13", "D14"), sep = ";", fill = "right")
taxonomy <- taxonomy[,c(1:6)]
taxmat <- as.matrix(taxonomy)
TAX = tax_table(taxmat)

#import metadata
metatable <- read.delim("https://raw.githubusercontent.com/cemborski/Horizontal-transmission-of-altered-phenotypes/master/16s%20rRNA%20HiSeq%20Analysis/Metatable.txt")
row.names(metatable) <- metatable[[1]]
metatable<- metatable[,(-1)]
META <- sample_data(metatable)

#Import Phylogenetic tree (rooted, exported from qiime2)
TREE <- read_tree("https://raw.githubusercontent.com/cemborski/Horizontal-transmission-of-altered-phenotypes/master/16s%20rRNA%20HiSeq%20Analysis/tree.nwk")

#Import Feature Table
Svtab <- read.delim("https://raw.githubusercontent.com/cemborski/Horizontal-transmission-of-altered-phenotypes/master/16s%20rRNA%20HiSeq%20Analysis/FeatureTable.txt")
row.names(Svtab)<-Svtab[[1]] #make OTU ID the row names
Svtab<-Svtab[,-(1)] # remove OTU ID column
fmat <- as.matrix(Svtab)
OTU = otu_table(fmat, taxa_are_rows = TRUE)

#create phyloseq object
ps <- phyloseq(OTU, TAX, META, TREE)

#subset to only include GUT samples (exclude media samples and HSD samples)
ps <- subset_samples(ps, SampleType=="Gut" & Treatment != "HSD")
rank_names(ps)

# function to remove rare artifactual taxa
# thresh is the fraction of samples that must have these OTUs
filterTaxa <- function(ps, thresh) {
  table(tax_table(ps)[, "D0"], exclude = NULL)
  #remove sequences that have D0 unassigned
  # Filter Physeq object - Bacteria ONLY
  ps <- subset_taxa(ps, D0=="D_0__Bacteria")
  table(tax_table(ps)[, "D2"], exclude = NULL)
  #remove phyla that cannot be part of microbiome
  ps = subset_taxa(ps, !D2 %in% c("D_2__Chloroplast" , " D_2__Cyanobacteria"))
  
  prevdf = apply(X = otu_table(ps),
                 MARGIN = ifelse(taxa_are_rows(ps), yes = 1, no = 2),
                 FUN = function(x){sum(x > 0)})
  
  prevdf = data.frame(Prevalence = prevdf,
                      TotalAbundance = taxa_sums(ps),
                      tax_table(ps))
  
  plyr::ddply(prevdf, "D2", function(df1){cbind(mean(df1$Prevalence),sum(df1$Prevalence))})
  
  ggplot(prevdf, aes(TotalAbundance, Prevalence / nsamples(ps),color=D2)) +
    # Include a guess for parameter
    geom_hline(yintercept = 0.01, alpha = 0.5, linetype = 2) +  geom_point(size = 2, alpha = 0.7) +
    scale_x_log10() +  xlab("Total Abundance") + ylab("Prevalence [Frac. Samples]") +
    facet_wrap(~D2) + theme(legend.position="none")
  
  prevalenceThreshold = thresh * nsamples(ps) # remove OTS found in less than thres% of the samples
  
  keepTaxa = rownames(prevdf)[(prevdf$Prevalence >= prevalenceThreshold)]
  ps2 = prune_taxa(keepTaxa, ps)
  
  table(tax_table(ps2)[, "D2"], exclude = NULL)
  
  prevdf2 = apply(X = otu_table(ps2),
                 MARGIN = ifelse(taxa_are_rows(ps2), yes = 1, no = 2),
                 FUN = function(x){sum(x > 0)})
  
  prevdf2 = data.frame(Prevalence = prevdf2,
                      TotalAbundance = taxa_sums(ps2),
                      tax_table(ps2))
  
  plyr::ddply(prevdf2, "D1", function(df1){cbind(mean(df1$Prevalence),sum(df1$Prevalence))})
  
  #transform to relative abundance
  ps2ra = transform_sample_counts(ps2, function(x){x / sum(x)})
  
  ##################################
  #Remove all taxa that are D1 == NA
  
  ps3 = subset_taxa(ps2, D1 %in% c("D_1__Acidobacteria", "D_1__Actinobacteria", "D_1__Bacteroidetes", "D_1__Firmicutes", " D_1__Parcubacteria", "D_1__Proteobacteria", "D_1__Verrucomicrobia"))
  table(tax_table(ps3)[, "D1"], exclude = NULL)
  
  #Final Prevalence Plot
  prevdf3 = apply(X = otu_table(ps3),
                  MARGIN = ifelse(taxa_are_rows(ps3), yes = 1, no = 2),
                  FUN = function(x){sum(x > 0)})
  
  prevdf3 = data.frame(Prevalence = prevdf3,
                       TotalAbundance = taxa_sums(ps3),
                       tax_table(ps3))
  
  plyr::ddply(prevdf3, "D1", function(df1){cbind(mean(df1$Prevalence),sum(df1$Prevalence))})
  
  ggplot(prevdf3, aes(TotalAbundance, Prevalence / nsamples(ps),color=D2)) +
    # Include a guess for parameter
    geom_hline(yintercept = 0.01, alpha = 0.5, linetype = 2) +  geom_point(size = 2, alpha = 0.7) +
    scale_x_log10() +  xlab("Total Abundance") + ylab("Prevalence [Frac. Samples]") +
    facet_wrap(~D2) + theme(legend.position="none")
  return(ps3)
}
ps3 <- filterTaxa(ps, 0.2)
```


## Are there differences in gut bacteria between NSD and control flies, and in horizontal acquisition (H1)

```{r F0_F1}
ps3cn <- subset_samples(ps3, Treatment %in% c("CD", "NSD") & Generation %in% c("F0", "F1"))
ddse <- phyloseq_to_deseq2(ps3cn, ~GenTreat+0)
ddse <- estimateSizeFactors(ddse)
idx <- rowSums(counts(ddse, normalized=TRUE) >= 5 ) >= 5 # additional abundance-based filtering, must have more than five counts in more than five samples in the design
ddse2 <- DESeq(ddse[idx,], test="Wald", fitType="local")
resultsNames(ddse2)
res1 <- results(ddse2, contrast=c("GenTreat","F1CD","F1NSD"))
table(res1$padj < 0.05)
# returns data frame of normalized counts for plotting form a deseq object and a table of results
combineSig <- function(ddse, res) {
  sigtab <- res[which(res$padj < 0.05), ]
  taxCounts <- list()
  i <- 1
  for (taxon in rownames(sigtab)) {
    taxName <- as.data.frame(tax_table(ps3)[taxon])[,6]
    tc <- plotCounts(ddse, gene=taxon, intgroup="GenTreat",returnData=TRUE)
    tc$species <- taxName
    tc$code <- paste(taxon,taxName)
    taxCounts[[i]] <- tc %>% separate(GenTreat, into = c("Gen", "Treat"), sep=2) %>% mutate(species = gsub("D_5__", "", species))
    i <- i + 1
  }
  return(plyr::rbind.fill(taxCounts))
}
combineSig(ddse2,res1) %>% ggplot(aes(Treat,count,color=Treat)) + geom_jitter(width=.1)+facet_grid(species~Gen)+scale_y_log10()
res0 <- results(ddse2, contrast=c("GenTreat","F0CD","F0NSD"))
res0$species <- gsub("D_5__", "", tax_table(ps3)[rownames(res0)])
res0[res0$padj < 0.05,c("species", "log2FoldChange", "padj")]
res0[rownames(res1)[which(res1$padj<0.05)],"padj"]
```
Interestingly all the bacteria were upregulaed 


## Are any bacteria associated with TAGs?

```{r}
phenotypes <- read_csv("https://raw.githubusercontent.com/cemborski/Horizontal-transmission-of-altered-phenotypes/master/Phenotype%20Analysis/phenotype_data") %>% filter(! grepl("\\+", Treatment) & Sex == "female") %>% mutate(Treatment = factor(Treatment, labels = c("CD", "NSD"))) %>% left_join(ps3@sam_data, ., by = c("Generation", "Treatment", "SampleNumber" = "Sample")) %>% select(Plate, Generation, Treatment, GenTreat, TransGen, Fat.Weight, TAG) %>% mutate (TAGwt = TAG/Fat.Weight)
ps3@sam_data$TAGwt <- phenotypes$TAGwt
ps3Met <- subset_samples(ps3,  Generation %in% c("F1", "F2", "F3"))
ddseMet <- phyloseq_to_deseq2(ps3Met, ~ TAGwt )
ddseMet <- estimateSizeFactors(ddseMet)
idx <- rowSums(counts(ddseMet, normalized=TRUE) >= 5 ) >= 5
ddseMet2 <- DESeq(ddseMet[idx,], test="Wald", fitType="local")
resultsNames(ddseMet2)
table(results(ddseMet2, name="TAGwt")$padj<0.05)
(tagsig <- results(ddseMet2, name="TAGwt")[results(ddseMet2, name="TAGwt")$padj<0.05,])
tax_table(ps3)[rownames(tagsig),6]
metCounts <- data.table::rbindlist(lapply(1:3, function(x) {  plotCounts(ddseMet, gene=rownames(tagsig)[x], intgroup="TAGwt",returnData=TRUE) %>% mutate(taxon = as.vector(gsub("D_5__","", tax_table(ps3)[rownames(tagsig)[x],6])), Generation = colData(ddseMet2)$Generation, Treatment = colData(ddseMet2)$Treatment) })) 
metCounts %>% ggplot(aes(count, TAGwt, color=Generation, shape=Treatment ))+geom_point()+scale_x_log10(limit=c(1,NA))+facet_grid(taxon~.)+stat_smooth(method="lm",aes(group=0))
```

```{r media}
psMedia <- filterTaxa(subset_samples(phyloseq(OTU, TAX, META, TREE), SampleType=="Media"), 0.01)
psMedia01 <- subset_samples(psMedia, Treatment %in% c("CD", "NSD") & Generation %in% c("F1", "F0"))
ddseMedia01 <- phyloseq_to_deseq2(psMedia01, ~ GenTreat + 0)
ddseMedia01 <- estimateSizeFactors(ddseMedia01)
ddseMedia01 <- DESeq(ddseMedia01, test="Wald", fitType="local")
resultsNames(ddseMedia01)
resMedia1 <- results(ddseMedia01, contrast=c("GenTreat","F1CD","F1NSD"))
resMedia1[rownames(res1)[which.min(res1$padj)],]
table(resMedia1$padj < 0.05)
resMedia0 <- results(ddseMedia01, contrast=c("GenTreat","F0CD","F0NSD"))
table(resMedia0$padj < 0.05)
```

## Is there Generations 2 and 3

```{r}
ps3F23 <- subset_samples(ps3, Generation %in% c("F2", "F3"))
ddseF23 <- phyloseq_to_deseq2(ps3F23, ~GenTreat+0)
ddseF23 <- estimateSizeFactors(ddseF23)
idx <- rowSums(counts(ddseF23, normalized=TRUE) >= 5 ) >= 5
ddseF23 <- DESeq(ddseF23[idx,], test="Wald", fitType="local")
resultsNames(ddseF23)
res2 <- results(ddseF23, contrast=c("GenTreat","F2CD","F2NSD"))
table(res2$padj < 0.05)
res2$species <- gsub("D_5__", "", tax_table(ps3)[rownames(res2)])
res2[res2$padj < 0.05,c("species", "log2FoldChange", "padj")]
res3 <- results(ddseF23, contrast=c("GenTreat","F3CD","F3NSD"))
table(res3$padj < 0.05)
combineSig(ddseF23,res2) %>% filter(Gen == "F2") %>% ggplot(aes(Treat,count,color=Treat)) + geom_jitter(width=.1)+facet_grid(species~., scales="free_y")+scale_y_log10()
```

I am not sure why the NA category is marked as signficant. It certainly doesn't look it.
